name: CI

on:
  push:
    branches-ignore:
      - '*travis*'
      - '*appveyor*'
      - '*doozer*'
  pull_request:
  workflow_dispatch:

jobs:

  test_on_host:
    name: ${{ matrix.os }} ${{ matrix.add_name }}
    runs-on: ${{ matrix.os }}
    strategy:
     matrix:
       include:
         - os:                       'ubuntu-22.04'
           add_name:                 '- plain'
           use_map_tube_version:     ''
           with_test_map_tube:       0
         - os:                       'ubuntu-22.04'
           add_name:                 '- with Map::Tube 3.62'
           use_map_tube_version:     '3.62'
           with_test_map_tube:       0
         - os:                       'ubuntu-22.04'
           add_name:                 '- with Test::Map::Tube'
           use_map_tube_version:     ''
           with_test_map_tube:       1
         - os:                       'ubuntu-24.04'
           add_name:                 '- with Test::Map::Tube'
           use_map_tube_version:     ''
           with_test_map_tube:       1
    steps:
    - name: apt hacks
      # /etc/apt/sources.list should be sufficient; all the other repositories are possibly problematic
      run: |
        sudo rm -f /etc/apt/sources.list.d/*.list
        sudo apt-get update -qq
      if: "startsWith(matrix.os, 'ubuntu-')"
    - uses: taiki-e/checkout-action@v1
    - name: Build and test
      env:
        USE_MAP_TUBE_VERSION:     ${{ matrix.use_map_tube_version }}
        WITH_TEST_MAP_TUBE:       ${{ matrix.with_test_map_tube }}
      run: |
        set -e
        sudo apt-get install -q --no-install-recommends cpanminus
        [ "$USE_MAP_TUBE_VERSION" != "latest" -a "$USE_MAP_TUBE_VERSION" != "" ] && cpanm --sudo --quiet --notest Map::Tube~"==$USE_MAP_TUBE_VERSION" || true
        [ "$WITH_TEST_MAP_TUBE" = 1 ]                                            && cpanm --sudo --quiet --notest Test::Map::Tube                     || true
        # XXX need to manually install configure_requires deps --- META.* does not exist at this point and cannot be generated
        cpanm --sudo --quiet --notest File::ShareDir::Install
        cpanm --sudo --quiet --notest --installdeps .
        perl Makefile.PL
        make distcheck
        HARNESS_OPTIONS=j4:c make disttest
      if: "!startsWith(matrix.os,'windows-')"

  test_in_container:
    name: Test with perl ${{ matrix.perlimage }}
    runs-on: ubuntu-latest
    container: perl:${{ matrix.perlimage }}
    strategy:
      matrix:
        include:
## some dependencies do not work with 5.8.x
#          - perlimage: 5.8.9-threaded-stretch
## dependency Getopt-Long-Descriptive does not work anymore with 5.10
#          - perlimage: 5.10.1-buster
          - perlimage: 5.12.5-stretch
          - perlimage: 5.14.4-stretch
          - perlimage: 5.16.3-buster
          - perlimage: 5.18.4-buster
          - perlimage: 5.22.4-stretch
          - perlimage: 5.40.0-bookworm

    steps:
    - name: apt hacks
      run: |
        set -e
        CODENAME=$(perl -nle '/^VERSION_CODENAME="?([^"]+)/ and $codename=$1; /^VERSION="\d+ \((.*)\)/ and $maybe_codename=$1; END { print $codename || $maybe_codename }' /etc/os-release)
        case "$CODENAME" in
          wheezy|jessie|stretch|buster)
            echo "APT::Get::AllowUnauthenticated 1;" > /etc/apt/apt.conf.d/02allow-unsigned
            echo "deb [check-valid-until=no] http://archive.debian.org/debian $CODENAME main"                   >  /etc/apt/sources.list
            echo "deb [check-valid-until=no] http://archive.debian.org/debian-security/ $CODENAME/updates main" >> /etc/apt/sources.list
            ;;
        esac
    - uses: taiki-e/checkout-action@v1
    - name: "build and test"
      run: |
        cpanm --quiet --notest File::ShareDir::Install
        perl Makefile.PL
        make distdir
        cd Map-Tube-Berlin-*
        cpanm --quiet --installdeps --notest .
        perl Makefile.PL
        make all test
